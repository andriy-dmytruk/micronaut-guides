/*
 * Library
 * This is a library API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package example.micronaut.controller;

//tag::import[]
import example.micronaut.BookService;
//end::import[]
import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.rules.SecurityRule;
import reactor.core.publisher.Mono;
import example.micronaut.model.BookInfo;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.annotations.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2022-01-31T13:21:29.860-05:00[America/Toronto]")
@Controller("${context-path}")
public class BooksController {

    //tag::inject[]
    private final BookService bookService; // <1>

    public BooksController(BookService bookService) { // <1>
        this.bookService = bookService;
    }
    //end::inject[]

    /**
     * Add a new book
     *
     * @param bookInfo  (required)
     */
    @ApiOperation(
        value = "Add a new book",
        nickname = "addBook",
        authorizations = {},
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success"),
        @ApiResponse(code = 400, message = "Bad Request")})
    @Post(uri="/add")
    @Produces(value = {})
    @Consumes(value = {"application/json"})
    @Secured(SecurityRule.IS_ANONYMOUS)
    //tag::addBook[]
    public Mono<Object> addBook(
        @Body @NotNull @Valid BookInfo bookInfo
    ) {
        return Mono.fromCallable(() -> {
            bookService.addBook(bookInfo);
            return ""; // <1>
        });
    }
    //end::addBook[]

    /**
     * Search for a book
     *
     * @param bookName  (optional)
     * @param authorName  (optional)
     * @return List&lt;BookInfo&gt;
     */
    @ApiOperation(
        value = "Search for a book",
        nickname = "search",
        response = BookInfo.class,
        responseContainer = "array",
        authorizations = {},
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = BookInfo.class, responseContainer = "array"),
        @ApiResponse(code = 400, message = "Bad Request")})
    @Get(uri="/search")
    @Produces(value = {"applicaton/json"})
    @Secured(SecurityRule.IS_ANONYMOUS)
    //tag::search[]
    public Mono<List<BookInfo>> search(
        @QueryValue(value="book-name") @Nullable @Size(min=3) String bookName, 
        @QueryValue(value="author-name") @Nullable String authorName
    ) {
        return Mono.fromCallable(() -> bookService.searchForBook(bookName, authorName)); // <1>
    }
    //end::search[]
}
